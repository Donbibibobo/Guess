name: Test Create Staging PR
run-name: Create Staging PR ${{ inputs.target_version }}

on:
  workflow_dispatch:
    inputs:
      target_version:
        description: "The target version (x.x.x-x)"
        type: string
        required: true

env:
  staging_branch: staging/${{ inputs.target_version }}

jobs:
  Create-staging-branch:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Create staging branch"
        id: create-branch
        run: |
          git checkout -b ${{ env.staging_branch }}
          echo "Created branch: ${{ env.staging_branch }}"

      - name: "Build Changelog"
        id: changelog_builder
        uses: mikepenz/release-changelog-builder-action@v3.7.2
        with:
          fromTag: da9094d19d346ace85104be9e9706fba7bece961
          toTag: 4d37a7eb13951703e70c5319cbdaba9876e15900
          configurationJson: |
            {
              "categories": [],
              "template": "#{{UNCATEGORIZED}}",
              "pr_template": "- #{{TITLE}}",
              "empty_template": "No changes",
              "ignore_labels": [
                "no-changelog", "document", "ci-cd"
              ]
            }
          outputFile: "changelog.txt"

      - name: "Print changelog"
        run: |
          cat changelog.txt

      - name: "Commit and push changes"
        run: |
          git config user.email "test-user@example.com"
          git config user.name "Test User"
          git add changelog.txt
          git commit -m "Update changelog for staging/${{ inputs.target_version }}"
      
      - name: "Print changelog after commit"
        run: |
          echo "Content of changelog.txt after commit:"
          while IFS= read -r line; do
            echo "$line"
          done < changelog.txt

      - name: Extract version from branch name
        id: extract-version
        run: |
          staging_branch="${{ env.staging_branch }}"
          if [[ $staging_branch =~ staging\/([0-9]+\.[0-9]+\.[0-9]+-[0-9]+) ]]; then
            version=${BASH_REMATCH[1]}
          else
            echo "Error: Cannot extract version from branch name $staging_branch"
            exit 1
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Generate Slack message
        id: slack-msg
        run: |
          CHANGELOG=$(awk '$1=$1' ORS='\\n' ./changelog.txt)
          echo "Simulated Slack Message:"
          echo "=========================="
          echo "Eatigo-stg-${{ steps.extract-version.outputs.version }} 已發布至 Firebase"
          echo "此次更新內容:"
          while IFS= read -r line; do
            echo "$line"
          done <<< "$CHANGELOG"
          echo "=========================="
